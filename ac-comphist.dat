(((":init" .
   [1 0 0 0 0])
  (":ensure" .
   [0 0 0 0 1 1 0])
  ("use-package" .
   [1 0 0 0 1 0 0 0 0 0 0])
  ("animate" .
   [2 0 0 0 0 0 0])
  ("stage" .
   [2 0 0 0 0])
  ("PIXI" .
   [2 0 0 0])
  ("addEventListener" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("html" .
   [1 0 0 0])
  ("last" .
   [4 0 0 0])
  ("nnop" .
   [1 0 0 0])
  ("down" .
   [1 0 0 0])
  ("start" .
   [2 0 0 0 0])
  ("mov" .
   [4 0 0])
  ("jez" .
   [1 0 0])
  ("acc" .
   [11 0 0])
  ("push" .
   [2 0 0 0])
  ("function" .
   [5 0 0 0 0 0 0 0])
  ("mousemove" .
   [0 0 0 0 0 1 0 0 0])
  ("domElement" .
   [0 0 0 0 1 0 0 0 0 0])
  ("renderer" .
   [1 0 0 0 0 0 1 0])
  ("smex-major-mode-commands" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("smex-initialize" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("App" .
   [1 0 0])
  ("eval" .
   [1 0 0 0])
  ("gulp" .
   [1 0 0 0])
  (":foo" .
   [1 0 0 0])
  (":family" .
   [0 0 0 0 1 0 0])
  ("nil" .
   [2 0 0])
  ("default" .
   [2 0 0 0 0 0 0])
  ("set-face-attribute" .
   [0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0])
  ("stx" .
   [1 0 0])
  ("syntax-parse" .
   [0 0 0 0 0 0 0 0 1 0 0 0])
  ("syntax" .
   [0 0 0 0 1 0])
  ("test->UU" .
   [1 0 0 0 0 0 0 0])
  ("define-syntax" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("e1" .
   [1 0])
  ("entities" .
   [1 0 0 0 0 0 0 0])
  ("reset!" .
   [1 0 0 0 0 0])
  ("apply-reduction-relation*" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("false" .
   [1 0 0 0 0])
  ("json/read-str" .
   [1 0 0 0 0 0 0 0 0 0 1 0 0])
  ("java.awt.image.BufferedImage" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("javax.imageio.ImageIO" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("std" .
   [2 0 0])
  ("namespace" .
   [0 0 0 0 0 0 1 0 0])
  ("include" .
   [1 0 0 0 0 0 0])
  ("missing-numbers-maps" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("sort" .
   [1 0 0 0])
  ("join" .
   [2 0 0 0])
  (":else" .
   [1 0 0 0 0])
  ("recur" .
   [3 0 0 0 0])
  ("get-list" .
   [3 0 0 0 0 0 0 0])
  ("clojure.string" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("split" .
   [2 0 0 0 0])
  ("difference" .
   [1 0 0 0 0 0 0 0 0 0])
  (":only" .
   [1 0 0 0 0])
  ("missing-numbers" .
   [1 0 0 0 0 0 0 3 0 0 1 0 0 0 0])
  ("diff" .
   [3 0 0 0])
  ("parse-direction" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("raise" .
   [2 0 0 0 0])
  ("error" .
   [1 0 0 0 0])
  ("String" .
   [1 0 0 0 0 0])
  ("an" .
   [1 0])
  ("check-equal?" .
   [1 0 0 0 0 0 2 0 0 0 0 0])
  ("config1" .
   [1 0 0 0 0 0 0])
  ("crawl-dungeon" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0])
  ("config3" .
   [1 0 0 0 0 0 0])
  ("helper" .
   [1 0 0 0 0 0])
  ("crawl-dungeon*" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("room-name" .
   [2 0 0 0 0 0 0 0 0])
  ("aconfig" .
   [1 0 0 0 0 0 0])
  ("lookup-room" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("current-room" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("findf" .
   [1 0 0 0 0])
  ("current-exits" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("next-exit" .
   [2 0 0 0 0 0 0 0 0])
  ("seen" .
   [2 0 0 0])
  ("exit-to" .
   [1 0 0 0 0 0 0])
  ("check" .
   [1 0 0 0 0])
  ("redex-check" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("generates" .
   [1 0 0 0 0 0 0 0 0])
  ("module+" .
   [1 0 0 0 1 0 0])
  ("test" .
   [1 0 0 0])
  ("->dd" .
   [2 0 0 0])
  ("Traverse" .
   [0 0 0 1 0 0 0 0])
  ("room" .
   [6 0 0 0])
  ("exit" .
   [11 0 0 0])
  ("EAST" .
   [4 0 0 0])
  ("WEST" .
   [3 0 0 0])
  ("NORTH" .
   [4 0 0 0 0])
  ("SOUTH" .
   [3 0 0 0 0])
  ("trace" .
   [1 0 0 0 0])
  ("drunk-dadl" .
   [0 0 0 0 0 1 0 0 0 0])
  ("require" .
   [2 0 0 0 1 0 0])
  ("at_1" .
   [1 0 0 0])
  ("at_2" .
   [2 0 0 0])
  ("..." .
   [3 0 0])
  ("where" .
   [1 0 0 0 0])
  ("config" .
   [1 0 0 0 0 0])
  ("printf" .
   [1 0 0 0 0 0])
  ("raw-data" .
   [0 0 0 0 2 0 0 0])
  ("Color/RED" .
   [1 0 0 0 0 0 0 0 0])
  ("Color/BLACK" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("moveDeclsToTop" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("moveDeclsFn" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("everywhereM" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("=>" .
   [1 0])
  ("GenericM" .
   [1 0 0 0 0 0 0 0])
  ("mkM" .
   [1 0 0])
  ("--" .
   [1 0])
  ("bits" .
   [1 0 0 0])
  (":particles" .
   [1 0 0 0 0 0 0 0 0 0])
  ("system" .
   [1 0 0 0 0 0])
  ("value" .
   [1 0 0 0 0])
  ("sp->transactions" .
   [0 0 0 0 0 0 0 0 3 1 0 0 0 0 0 0])
  ("sp->transactions-helper" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0])
  ("deletions-atom" .
   [1 0 0 0 0 0 0 0 0 0 1 2 0 0])
  ("db-val" .
   [2 0 0 0 0 0])
  ("is-recursive" .
   [0 0 0 0 0 0 0 0 1 0 0 0])
  ("cardinality" .
   [0 0 0 0 0 0 1 0 0 0 0])
  (":is-a" .
   [1 0 0 0 0])
  (":is-an" .
   [1 0 0 0 0 0])
  (":is-many" .
   [1 0 0 0 0 0 0 0])
  ("db" .
   [4 0])
  (":items" .
   [1 0 0 0 0 0])
  ("iname" .
   [1 0 0 0 0])
  ("some?" .
   [2 0 0 0 0])
  ("deletions" .
   [4 0 0 0 0 0 0 0 0])
  (":delete" .
   [1 0 0 0 0 0 0])
  ("datomic-key" .
   [3 0 0 0 0 0 0 0 0 0 0])
  ("entity" .
   [1 0 0 0 0 0])
  ("atom" .
   [1 0 0 0])
  ("inc" .
   [1 0 0])
  ("swap!" .
   [1 0 0 0 0])
  ("range" .
   [1 0 0 0 0])
  ("datomic-data" .
   [1 0 0 0 0 0 0 0 0 1 0 0])
  (":require" .
   [1 0 0 0 0 0 0 0])
  ("clojure.test" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":as" .
   [1 0 0])
  (":refer" .
   [1 0 0 0 0 0])
  (":all" .
   [1 0 0 0])
  ("db-conn" .
   [1 0 0 0 0 0 0])
  ("conn" .
   [2 0 0 0])
  ("db/get-conn" .
   [2 0 0 0 0 0 0 0 0 0 1])
  ("sp-investor" .
   [1 nil 0 0 0 0 0 0 0 0 0])
  ("add-to-list" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("chessCookie" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("color" .
   [1 0 0 1 0])
  ("plz" .
   [3 0 0])
  ("make_color" .
   [0 0 0 0 0 0 0 1 1 0])
  ("console" .
   [3 0 0 0 0 1 0])
  ("return" .
   [2 0 0 0 0 0])
  ("nice_color" .
   [0 0 0 0 0 1 1 0 0 0])
  ("body" .
   [1 0 0 0])
  ("if" .
   [1 0])
  ("scene" .
   [2 0 0 0 0])
  ("children" .
   [1 0 0 0 0 0 0 0])
  ("true" .
   [1 0 0 0])
  ("each" .
   [1 0 0 0])
  ("material" .
   [0 0 0 0 1 0 0 0])
  ("wireframe" .
   [1 0 0 0 0 0 0 0 0])
  ("length" .
   [1 0 0 0 0 0])
  ("running" .
   [2 0 0 0 0 0 0])
  ("sf" .
   [1 0])
  ("Event" .
   [1 1 0 0 0])
  ("pollEvent" .
   [0 0 1 0 0 0 0 0 0])
  ("(sf::Event &event)" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("event" .
   [3 0 0 0 0])
  ("type" .
   [0 0 1 0])
  ("Close" .
   [0 0 1 0 0])
  ("Closed" .
   [0 1 0 0 0 0])
  (":after" .
   [2 0 0 0 0 0])
  ("racket-mode" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("paredit" .
   [1 0 0 0 0 0 0])
  ("Rust" .
   [0 0 1 0])
  ("rust-mode" .
   [1 0 0 0 0 0 0 0 0])
  ("flycheck" .
   [1 0 0 0 0 0 0 0])
  ("cargo" .
   [1 0 0 0 0])))
