;; Object user/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "user/"
  :tables (list 
   (semanticdb-table "entry.c"
    :major-mode 'c-mode
    :tags 
        '( ("syscall.h" include (:system-flag t) nil [1 21])
            ("main" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [33 37])
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [38 46]))                  
                :type "int")
                nil [23 48])
            ("_start" function
               (:prototype-flag t
                :arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [62 71])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [72 85]))                  
                :type "void")
                nil [49 86])
            ("_start" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [101 110])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [111 124]))                  
                :type "void")
                nil [88 157]))          
    :file "entry.c"
    :pointmax 158
    :fsize 157
    :lastmodtime '(21208 19921 0 0)
    :unmatched-syntax '((semantic-list 44 . 46))
    )
   (semanticdb-table "syscall.h"
    :major-mode 'c-mode
    :tags 
        '( ("__LIB_USER_SYSCALL_H" variable (:constant-flag t) nil [38 58])
            ("stdbool.h" include (:system-flag t) nil [60 80])
            ("debug.h" include (:system-flag t) nil [81 99])
            ("pid_t" type
               (:typedef ("int")
                :superclasses "int"
                :type "typedef")
                nil [127 145])
            ("PID_ERROR" variable (:constant-flag t) nil [154 163])
            ("mapid_t" type
               (:typedef ("int")
                :superclasses "int"
                :type "typedef")
                nil [207 227])
            ("MAP_FAILED" variable (:constant-flag t) nil [236 246])
            ("READDIR_MAX_LEN" variable (:constant-flag t) nil [332 347])
            ("EXIT_SUCCESS" variable (:constant-flag t) nil [425 437])
            ("EXIT_FAILURE" variable (:constant-flag t) nil [485 497])
            ("NO_RETURN" variable (:type "int") nil [585 595])
            ("NO_RETURN" variable (:type "int") nil [619 629])
            ("exec" function
               (:prototype-flag t
                :arguments 
                  ( ("file" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [642 659]))                  
                :type ("pid_t" type (:type "class") nil nil))
                nil [630 660])
            ("wait" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("pid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [671 677]))                  
                :type "int")
                nil [661 678])
            ("create" function
               (:prototype-flag t
                :arguments 
                  ( ("file" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [692 709])
                    ("initial_size" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [710 732]))                  
                :type "bool")
                nil [679 733])
            ("remove" function
               (:prototype-flag t
                :arguments 
                  ( ("file" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [747 764]))                  
                :type "bool")
                nil [734 765])
            ("open" function
               (:prototype-flag t
                :arguments 
                  ( ("file" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [776 793]))                  
                :type "int")
                nil [766 794])
            ("filesize" function
               (:prototype-flag t
                :arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [809 816]))                  
                :type "int")
                nil [795 817])
            ("read" function
               (:prototype-flag t
                :arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [828 835])
                    ("buffer" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [836 849])
                    ("length" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [850 866]))                  
                :type "int")
                nil [818 867])
            ("write" function
               (:prototype-flag t
                :arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [879 886])
                    ("buffer" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [887 906])
                    ("length" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [907 923]))                  
                :type "int")
                nil [868 924])
            ("seek" function
               (:prototype-flag t
                :arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [936 943])
                    ("position" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [944 962]))                  
                :type "void")
                nil [925 963])
            ("tell" function
               (:prototype-flag t
                :arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [979 986]))                  
                :type "unsigned int")
                nil [964 987])
            ("close" function
               (:prototype-flag t
                :arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [1000 1007]))                  
                :type "void")
                nil [988 1008])
            ("mmap" function
               (:prototype-flag t
                :arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [1066 1073])
                    ("addr" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [1074 1085]))                  
                :type ("mapid_t" type (:type "class") nil nil))
                nil [1052 1086])
            ("munmap" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("mapid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1100 1108]))                  
                :type "void")
                nil [1087 1109])
            ("chdir" function
               (:prototype-flag t
                :arguments 
                  ( ("dir" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1145 1161]))                  
                :type "bool")
                nil [1133 1162])
            ("mkdir" function
               (:prototype-flag t
                :arguments 
                  ( ("dir" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1175 1191]))                  
                :type "bool")
                nil [1163 1192])
            ("readdir" function
               (:prototype-flag t
                :arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [1207 1214])
                    ("name" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [1215 1246]))                  
                :type "bool")
                nil [1193 1247])
            ("isdir" function
               (:prototype-flag t
                :arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [1260 1267]))                  
                :type "bool")
                nil [1248 1268])
            ("inumber" function
               (:prototype-flag t
                :arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [1282 1289]))                  
                :type "int")
                nil [1269 1290]))          
    :file "syscall.h"
    :pointmax 1324
    :fsize 1323
    :lastmodtime '(21208 19921 0 0)
    :unmatched-syntax '((semantic-list 606 . 618) (symbol 601 . 605) (VOID 596 . 600) (semantic-list 578 . 584) (symbol 573 . 577) (VOID 568 . 572) (semantic-list 606 . 618) (symbol 601 . 605) (VOID 596 . 600) (semantic-list 578 . 584) (symbol 573 . 577) (VOID 568 . 572) (number 498 . 499) (semantic-list 606 . 618) (symbol 601 . 605) (VOID 596 . 600) (semantic-list 578 . 584) (symbol 573 . 577) (VOID 568 . 572))
    :lexical-table 
        '(("__LIB_USER_SYSCALL_H")
          ("MAP_FAILED" . ((semantic-list "((mapid_t) -1)" 247 . 261)))
          ("PID_ERROR" . ((semantic-list "((pid_t) -1)" 164 . 176)))
          ("READDIR_MAX_LEN" . ((number "14" 348 . 350)))
          ("EXIT_SUCCESS" . ((number "0" 438 . 439)))
          ("EXIT_FAILURE" . ((number "1" 498 . 499)))
          )

    )
   (semanticdb-table "syscall.c"
    :major-mode 'c-mode
    :tags 
        '( ("syscall.h" include (:system-flag t) nil [1 21])
            ("../syscall-nr.h" include nil nil [22 48])
            ("syscall0" variable (:constant-flag t) nil [155 163])
            ("syscall1" variable (:constant-flag t) nil [859 867])
            ("syscall2" variable (:constant-flag t) nil [1729 1737])
            ("syscall3" variable (:constant-flag t) nil [2648 2656])
            ("halt" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3521 3526]))                  
                :type "void")
                nil [3510 3572])
            ("exit" function
               (:arguments 
                  ( ("status" variable (:type "int") (reparse-symbol arg-sub-list) [3585 3596]))                  
                :type "void")
                nil [3574 3649])
            ("exec" function
               (:arguments 
                  ( ("file" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3663 3680]))                  
                :type ("pid_t" type (:type "class") nil nil))
                nil [3651 3728])
            ("wait" function
               (:arguments 
                  ( ("pid" variable (:type ("pid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3740 3750]))                  
                :type "int")
                nil [3730 3789])
            ("create" function
               (:arguments 
                  ( ("file" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3804 3821])
                    ("initial_size" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [3822 3844]))                  
                :type "bool")
                nil [3791 3900])
            ("remove" function
               (:arguments 
                  ( ("file" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3915 3932]))                  
                :type "bool")
                nil [3902 3974])
            ("open" function
               (:arguments 
                  ( ("file" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3986 4003]))                  
                :type "int")
                nil [3976 4043])
            ("filesize" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [4059 4066]))                  
                :type "int")
                nil [4045 4109])
            ("read" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [4121 4128])
                    ("buffer" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [4129 4142])
                    ("size" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [4143 4157]))                  
                :type "int")
                nil [4111 4209])
            ("write" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [4222 4229])
                    ("buffer" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [4230 4249])
                    ("size" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [4250 4264]))                  
                :type "int")
                nil [4211 4317])
            ("seek" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [4330 4337])
                    ("position" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [4338 4356]))                  
                :type "void")
                nil [4319 4398])
            ("tell" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [4415 4422]))                  
                :type "unsigned int")
                nil [4400 4461])
            ("close" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [4475 4482]))                  
                :type "void")
                nil [4463 4514])
            ("mmap" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [4530 4537])
                    ("addr" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [4538 4549]))                  
                :type ("mapid_t" type (:type "class") nil nil))
                nil [4516 4593])
            ("munmap" function
               (:arguments 
                  ( ("mapid" variable (:type ("mapid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4608 4622]))                  
                :type "void")
                nil [4595 4658])
            ("chdir" function
               (:arguments 
                  ( ("dir" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4672 4688]))                  
                :type "bool")
                nil [4660 4728])
            ("mkdir" function
               (:arguments 
                  ( ("dir" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4742 4758]))                  
                :type "bool")
                nil [4730 4798])
            ("readdir" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [4814 4821])
                    ("name" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [4822 4853]))                  
                :type "bool")
                nil [4800 4901])
            ("isdir" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [4915 4922]))                  
                :type "bool")
                nil [4903 4962])
            ("inumber" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [4977 4984]))                  
                :type "int")
                nil [4964 5026]))          
    :file "syscall.c"
    :pointmax 5027
    :fsize 5026
    :lastmodtime '(21254 37427 0 0)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("syscall0" (spp-arg-list ("NUMBER") 163 . 171) . ((semantic-list "({                                                      \\
          int retval;                                           \\
          asm volatile                                          \\
            (\"pushl %[number]; int $0x30; addl $4, %%esp\"       \\
               : \"=a\" (retval)                                  \\
               : [number] \"i\" (NUMBER)                          \\
               : \"memory\");                                     \\
          retval;                                               \\
        })" 221 . 751)))
          ("syscall1" (spp-arg-list ("NUMBER" "ARG0") 867 . 881) . ((semantic-list "({                                                               \\
          int retval;                                                    \\
          asm volatile                                                   \\
            (\"pushl %[arg0]; pushl %[number]; int $0x30; addl $8, %%esp\" \\
               : \"=a\" (retval)                                           \\
               : [number] \"i\" (NUMBER),                                  \\
                 [arg0] \"g\" (ARG0)                                       \\
               : \"memory\");                                              \\
          retval;                                                        \\
        })" 934 . 1611)))
          ("syscall2" (spp-arg-list ("NUMBER" "ARG0" "ARG1") 1737 . 1757) . ((semantic-list "({                                                      \\
          int retval;                                           \\
          asm volatile                                          \\
            (\"pushl %[arg1]; pushl %[arg0]; \"                   \\
             \"pushl %[number]; int $0x30; addl $12, %%esp\"      \\
               : \"=a\" (retval)                                  \\
               : [number] \"i\" (NUMBER),                         \\
                 [arg0] \"g\" (ARG0),                             \\
                 [arg1] \"g\" (ARG1)                              \\
               : \"memory\");                                     \\
          retval;                                               \\
        })" 1795 . 2523)))
          ("syscall3" (spp-arg-list ("NUMBER" "ARG0" "ARG1" "ARG2") 2656 . 2682) . ((semantic-list "({                                                      \\
          int retval;                                           \\
          asm volatile                                          \\
            (\"pushl %[arg2]; pushl %[arg1]; pushl %[arg0]; \"    \\
             \"pushl %[number]; int $0x30; addl $16, %%esp\"      \\
               : \"=a\" (retval)                                  \\
               : [number] \"i\" (NUMBER),                         \\
                 [arg0] \"g\" (ARG0),                             \\
                 [arg1] \"g\" (ARG1),                             \\
                 [arg2] \"g\" (ARG2)                              \\
               : \"memory\");                                     \\
          retval;                                               \\
        })" 2714 . 3508)))
          )

    )
   (semanticdb-table "debug.c"
    :major-mode 'c-mode
    :tags 
        '( ("debug.h" include (:system-flag t) nil [1 19])
            ("stdarg.h" include (:system-flag t) nil [20 39])
            ("stdbool.h" include (:system-flag t) nil [40 60])
            ("stdio.h" include (:system-flag t) nil [61 79])
            ("syscall.h" include (:system-flag t) nil [80 100])
            ("debug_panic" function
               (:arguments 
                  ( ("file" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [247 264])
                    ("line" variable (:type "int") (reparse-symbol arg-sub-list) [265 274])
                    ("function" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [275 296])
                    ("message" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [310 330])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [331 335]))                  
                :type "void")
                nil [229 558]))          
    :file "debug.c"
    :pointmax 559
    :fsize 558
    :lastmodtime '(21208 19921 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "stdio.h"
    :file "stdio.h"
    :fsize 209
    :lastmodtime '(21208 19921 0 0)
    )
   )
  :file "!Users!jim!classes!systems!pint-heads!src!lib!user!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
